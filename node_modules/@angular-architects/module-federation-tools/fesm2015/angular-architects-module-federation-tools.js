import { Component, ViewChild, ElementRef, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { __awaiter } from 'tslib';
import { ActivatedRoute } from '@angular/router';
import { loadRemoteModule } from '@angular-architects/module-federation';

// eslint-disable-next-line @angular-eslint/component-class-suffix
class WebComponentWrapper {
    constructor(route) {
        this.route = route;
    }
    ngAfterContentInit() {
        return __awaiter(this, void 0, void 0, function* () {
            const options = this.route.snapshot.data;
            try {
                yield loadRemoteModule(options);
                const element = document.createElement(options.elementName);
                this.vc.nativeElement.appendChild(element);
            }
            catch (error) {
                console.error(error);
            }
        });
    }
}
WebComponentWrapper.decorators = [
    { type: Component, args: [{
                template: '<div #vc></div>'
            },] }
];
WebComponentWrapper.ctorParameters = () => [
    { type: ActivatedRoute }
];
WebComponentWrapper.propDecorators = {
    vc: [{ type: ViewChild, args: ['vc', { read: ElementRef, static: true },] }]
};

class ModuleFederationToolsModule {
}
ModuleFederationToolsModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                declarations: [
                    WebComponentWrapper
                ],
                exports: [
                    WebComponentWrapper
                ]
            },] }
];

/**
 * Generated bundle index. Do not edit.
 */

export { ModuleFederationToolsModule, WebComponentWrapper };
//# sourceMappingURL=angular-architects-module-federation-tools.js.map
