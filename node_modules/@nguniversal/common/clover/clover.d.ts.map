{"version":3,"file":"clover.d.ts","sources":["clover.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA","sourcesContent":["\nimport { ApplicationRef } from '@angular/core';\r\nimport { HttpEvent } from '@angular/common/http';\r\nimport { HttpHandler } from '@angular/common/http';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\nimport { HttpRequest } from '@angular/common/http';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { OnDestroy } from '@angular/core';\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { ɵSharedStylesHost } from '@angular/platform-browser';\r\n\r\nexport declare class RendererModule {\r\n    private applicationRef;\r\n    private transferState?;\r\n    private appId?;\r\n    constructor(applicationRef: ApplicationRef, transferState?: TransferState | undefined, appId?: string | undefined);\r\n    static forRoot(): ModuleWithProviders<RendererModule>;\r\n}\r\n\r\n\r\nexport declare class TransferHttpCacheModule {\r\n}\r\n\r\nexport declare type ɵNGRenderMode = boolean | undefined | ɵNGRenderModeAPI;\r\n\r\nexport declare interface ɵNGRenderModeAPI {\r\n    getSerializedState: () => string | undefined;\r\n    getWhenStable: () => Promise<void>;\r\n    appId?: string;\r\n}\r\n\r\nexport declare class ɵnguniversal_modules_common_clover_clover_a extends ɵSharedStylesHost implements OnDestroy {\r\n    private doc;\r\n    private appId?;\r\n    private head;\r\n    private _styleNodes;\r\n    private _styleNodesInDOM;\r\n    constructor(doc: Document, appId?: string | undefined);\r\n    private _addStyle;\r\n    onStylesAdded(additions: Set<string>): void;\r\n    addHost(_hostNode: Node): void;\r\n    removeHost(_hostNode: Node): void;\r\n    ngOnDestroy(): void;\r\n}\r\n\r\nexport declare class ɵnguniversal_modules_common_clover_clover_b implements HttpInterceptor {\r\n    private transferState;\r\n    private isCacheActive;\r\n    private makeCacheKey;\r\n    constructor(appRef: ApplicationRef, transferState: TransferState);\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;\r\n    private getHeaders;\r\n}\r\n\r\nexport { }\r\n"]}